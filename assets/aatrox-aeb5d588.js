import{r as h,j as a}from"./index-4158f59b.js";function f({currentLevel:g,mod:s,bonus:v,atk:o,def:l,updateAbilitiesBonus:w}){const p={q:1,ult:{level:1,active:!1}},b=(r,e)=>{switch(e.type){case"qToggleStage":return{...r,q:r.q<3?r.q+1:1};case"ultToggleState":return{...r,ult:{level:r.ult.level,active:!r.ult.active}};case"ultToggleLevel":return{...r,ult:{level:r.ult.level<3?r.ult.level+1:1,active:r.ult.active}};default:return r}},[m,c]=h.useReducer(b,p),i=h.useMemo(()=>{const r={cooldown:{base:24,growth:0},damage:{base:l.health*5/100,growth:l.health*10/100*(Number(g)-1)}},e={cooldown:{base:13,growth:2},damage:{base:15,growth:30,modifier:o.attack*70/100,modifierGrowth:o.attack*5/100,specialModifier:.75+.25*m.q}},t={cooldown:{base:15,growth:1},damage:{base:25,growth:15,modifier:o.attack*40/100}},d={cooldown:{base:8,growth:1},vampirism:{base:o.attack*19/100,growth:o.attack*2/100}},n={cooldown:{base:75,growth:10}};return{passive:{cooldown:r.cooldown.base*s.atkcdr,damage:{raw:r.damage.base+r.damage.growth,mitigated:(r.damage.base+r.damage.growth)*(1-s.defPhysRed)}},q:{cooldown:{1:e.cooldown.base*s.atkcdr,2:(e.cooldown.base+e.cooldown.growth)*s.atkcdr,3:(e.cooldown.base+e.cooldown.growth*2)*s.atkcdr,4:(e.cooldown.base+e.cooldown.growth*3)*s.atkcdr},damage:{raw:{1:(e.damage.base+e.damage.modifier)*e.damage.specialModifier,2:(e.damage.base+e.damage.modifier+e.damage.growth+e.damage.modifierGrowth)*e.damage.specialModifier,3:(e.damage.base+e.damage.modifier+e.damage.growth*2+e.damage.modifierGrowth*2)*e.damage.specialModifier,4:(e.damage.base+e.damage.modifier+e.damage.growth*3+e.damage.modifierGrowth*3)*e.damage.specialModifier},mitigated:{1:(e.damage.base+e.damage.modifier)*e.damage.specialModifier*(1-s.defPhysRed),2:(e.damage.base+e.damage.modifier+e.damage.growth+e.damage.modifierGrowth)*e.damage.specialModifier*(1-s.defPhysRed),3:(e.damage.base+e.damage.modifier+e.damage.growth*2+e.damage.modifierGrowth*2)*e.damage.specialModifier*(1-s.defPhysRed),4:(e.damage.base+e.damage.modifier+e.damage.growth*3+e.damage.modifierGrowth*3)*e.damage.specialModifier*(1-s.defPhysRed)}},text:{damage:a.jsxs("span",{className:"stat--ad",children:[e.damage.base," / ",e.damage.base+e.damage.growth," / ",e.damage.base+e.damage.growth*2," / ",e.damage.base+e.damage.growth*3," (+70% / 75% / 80% / 85% AD) physical damage"]})}},w:{cooldown:{1:t.cooldown.base*s.atkcdr,2:(t.cooldown.base+t.cooldown.growth)*s.atkcdr,3:(t.cooldown.base+t.cooldown.growth*2)*s.atkcdr,4:(t.cooldown.base+t.cooldown.growth*3)*s.atkcdr},damage:{raw:{1:t.damage.base+t.damage.modifier,2:t.damage.base+t.damage.modifier+t.damage.growth,3:t.damage.base+t.damage.modifier+t.damage.growth*2,4:t.damage.base+t.damage.modifier+t.damage.growth*3},mitigated:{1:(t.damage.base+t.damage.modifier)*(1-s.defPhysRed),2:(t.damage.base+t.damage.modifier+t.damage.growth)*(1-s.defPhysRed),3:(t.damage.base+t.damage.modifier+t.damage.growth*2)*(1-s.defPhysRed),4:(t.damage.base+t.damage.modifier+t.damage.growth*3)*(1-s.defPhysRed)}},text:{damage:a.jsxs("span",{className:"stat--ad",children:[t.damage.base," / ",t.damage.base+t.damage.growth," / ",t.damage.base+t.damage.growth*2," / ",t.damage.base+t.damage.growth*3," (+40% AD) physical damage"]})}},e:{cooldown:{1:d.cooldown.base*s.atkcdr,2:(d.cooldown.base+d.cooldown.growth)*s.atkcdr,3:(d.cooldown.base+d.cooldown.growth*2)*s.atkcdr,4:(d.cooldown.base+d.cooldown.growth*3)*s.atkcdr},vampirism:{raw:{1:d.vampirism.base,2:d.vampirism.base+d.vampirism.growth,3:d.vampirism.base+d.vampirism.growth*2,4:d.vampirism.base+d.vampirism.growth*3},mitigated:{1:d.vampirism.base*(1-s.defPhysRed),2:(d.vampirism.base+d.vampirism.growth)*(1-s.defPhysRed),3:(d.vampirism.base+d.vampirism.growth*2)*(1-s.defPhysRed),4:(d.vampirism.base+d.vampirism.growth*3)*(1-s.defPhysRed)}},text:{vampirism:a.jsx("span",{className:"stat--vamp",children:"19% / 21% / 23% / 25% physical vamp"})}},r:{cooldown:{1:n.cooldown.base*s.atkcdr,2:(n.cooldown.base+n.cooldown.growth)*s.atkcdr,3:(n.cooldown.base+n.cooldown.growth*2)*s.atkcdr},vampirism:{raw:{1:d.vampirism.base*1.5,2:(d.vampirism.base+d.vampirism.growth)*1.5,3:(d.vampirism.base+d.vampirism.growth*2)*1.5,4:(d.vampirism.base+d.vampirism.growth*3)*1.5},mitigated:{1:d.vampirism.base*1.5*(1-s.defPhysRed),2:(d.vampirism.base+d.vampirism.growth)*1.5*(1-s.defPhysRed),3:(d.vampirism.base+d.vampirism.growth*2)*1.5*(1-s.defPhysRed),4:(d.vampirism.base+d.vampirism.growth*3)*1.5*(1-s.defPhysRed)}}}}},[o,l,s,g,m]);h.useEffect(()=>{let r={};m.ult.active?r={aatroxUlt:m.ult.level}:r={aatroxUlt:0},w(r)},[m]);const x=[{description:a.jsxs("div",{className:"abilityDescription",children:[a.jsxs("h4",{children:[a.jsx("span",{className:"marker--ability",children:"P"})," DEATHBRINGER STANCE"]}),a.jsxs("p",{children:["Enhances his next attack every ",a.jsxs("abbr",{title:"24 seconds base",children:[i.passive.cooldown.toFixed(1)," seconds"]})," to deal bonus ",a.jsxs("abbr",{title:"5%-15% of terget's maximum Health based on level, pre/post-mitigation stats",className:"stat--ad",children:[Math.round(i.passive.damage.raw)," / ",Math.round(i.passive.damage.mitigated)," physical damage"]}),"  and ",a.jsx("span",{className:"stat--hp",children:"heals"}),"  himself for the same amount. ",a.jsx("br",{}),"Stance's cooldown is reduced by 3 seconds when Aatrox hits a Champion or large monster with an attack or ability. ",a.jsx("br",{}),"Max ",a.jsx("b",{children:"50"})," damage against monsters. ",a.jsx("br",{})]})]})},{description:a.jsxs("div",{className:"abilityDescription",children:[a.jsxs("h4",{children:[a.jsx("span",{className:"marker--ability",children:"1"})," THE DARKIN BLADE"]}),a.jsxs("h5",{children:["Cooldown:"," "," ",i.q.cooldown[1].toFixed(1)," /"," ",i.q.cooldown[2].toFixed(1)," /"," ",i.q.cooldown[3].toFixed(1)," /"," ",i.q.cooldown[4].toFixed(1)]}),a.jsx("h5",{className:"stat--ad",children:"Damage:"}),a.jsxs("p",{className:"stat--ad",children:["Pre-mitigation:"," ",Math.round(i.q.damage.raw[1])," /"," ",Math.round(i.q.damage.raw[2])," /"," ",Math.round(i.q.damage.raw[3])," /"," ",Math.round(i.q.damage.raw[4])]}),a.jsxs("p",{className:"stat--ad",children:["Post-mitigation:"," ",Math.round(i.q.damage.mitigated[1])," /"," ",Math.round(i.q.damage.mitigated[2])," /"," ",Math.round(i.q.damage.mitigated[3])," /"," ",Math.round(i.q.damage.mitigated[4])]}),a.jsxs("div",{children:[a.jsxs("p",{children:["Current stage: ",m.q]}),a.jsx("button",{onClick:()=>{c({type:"qToggleStage"})},children:"Change ability Stage"})]}),a.jsxs("p",{children:["Swings his giant blade, dealing ",i.q.text.damage,". This ability can be cast 2 more times, with each cast dealing 25% more damage."]}),a.jsx("p",{children:"Deals 65% damage to minions."}),a.jsx("p",{children:"Deals 70% damage to monsters."})]})},{description:a.jsxs("div",{className:"abilityDescription",children:[a.jsxs("h4",{children:[a.jsx("span",{className:"marker--ability",children:"2"})," INFERNAL CHAINS"]}),a.jsxs("h5",{children:["Cooldown:"," ",i.w.cooldown[1].toFixed(1)," /"," ",i.w.cooldown[2].toFixed(1)," /"," ",i.w.cooldown[3].toFixed(1)," /"," ",i.w.cooldown[4].toFixed(1)]}),a.jsx("h5",{className:"stat--ad",children:"Damage:"}),a.jsxs("p",{className:"stat--ad",children:["Pre-mitigation:"," ",Math.round(i.w.damage.raw[1])," ","/ ",Math.round(i.w.damage.raw[2])," ","/ ",Math.round(i.w.damage.raw[3])," ","/ ",Math.round(i.w.damage.raw[4])]}),a.jsxs("p",{className:"stat--ad",children:["Post-mitigation:"," ",Math.round(i.w.damage.mitigated[1])," /"," ",Math.round(i.w.damage.mitigated[2])," /"," ",Math.round(i.w.damage.mitigated[3])," /"," ",Math.round(i.w.damage.mitigated[4])]}),a.jsxs("p",{children:["Sends a chain dealing ",i.w.text.damage," to the first enemy hit and slowing them by 25% for 1.5 seconds."]}),a.jsx("p",{children:"If a champion or large monster remains within the imapct area after 1.5 seconds, they will be dragged back to the center and take the same damage again."}),a.jsx("p",{children:"Deals double damage to minions."})]})},{description:a.jsxs("div",{className:"abilityDescription",children:[a.jsxs("h4",{children:[a.jsx("span",{className:"marker--ability",children:"3"})," UMBRAL DASH"]}),a.jsxs("h5",{children:["Cooldown:"," ",i.e.cooldown[1].toFixed(1)," /"," ",i.e.cooldown[2].toFixed(1)," /"," ",i.e.cooldown[3].toFixed(1)," /"," ",i.e.cooldown[4].toFixed(1)]}),a.jsx("h5",{className:"stat--vamp",children:"On-hit heal:"}),a.jsxs("p",{className:"stat--vamp",children:["Pre-mitigation:"," ",Math.round(i.e.vampirism.raw[1])," /"," ",Math.round(i.e.vampirism.raw[2])," /"," ",Math.round(i.e.vampirism.raw[3])," /"," ",Math.round(i.e.vampirism.raw[4])]}),a.jsxs("p",{className:"stat--vamp",children:["Post-mitigation:"," ",Math.round(i.e.vampirism.mitigated[1])," /"," ",Math.round(i.e.vampirism.mitigated[2])," /"," ",Math.round(i.e.vampirism.mitigated[3])," /"," ",Math.round(i.e.vampirism.mitigated[4])]}),a.jsxs("p",{children:[a.jsx("b",{children:"Passive:"})," Aatrox gains ",i.e.text.vampirism," against enemy champions. ",a.jsx("br",{}),a.jsx("b",{children:"Active:"}),"  Dashes forward. This resets Aatrox's normal attack. Usable whie casting other abilities."]})]})},{description:a.jsxs("div",{className:"abilityDescription",children:[a.jsxs("h4",{children:[a.jsx("span",{className:"marker--ability",children:"ULT"})," WORLD ENDER"]}),a.jsxs("h5",{children:["Cooldown:"," ",(75*s.atkcdr).toFixed(1)," /"," ",(65*s.atkcdr).toFixed(1)," /"," ",(55*s.atkcdr).toFixed(1)]}),a.jsx("h5",{className:"stat--vamp",children:"On-hit healing whive active:"}),a.jsxs("p",{className:"stat--vamp",children:["Pre-mitigation:"," ",Math.round(i.r.vampirism.raw[1])," /"," ",Math.round(i.r.vampirism.raw[2])," /"," ",Math.round(i.r.vampirism.raw[3])," /"," ",Math.round(i.r.vampirism.raw[4])]}),a.jsxs("p",{className:"stat--vamp",children:["Post-mitigation:"," ",Math.round(i.r.vampirism.mitigated[1])," /"," ",Math.round(i.r.vampirism.mitigated[2])," /"," ",Math.round(i.r.vampirism.mitigated[3])," /"," ",Math.round(i.r.vampirism.mitigated[4])]}),a.jsxs("div",{children:[a.jsxs("p",{children:["Ult effect: ",m.ult.active?a.jsx("span",{className:"stat--hp",children:"Active"}):a.jsx("span",{className:"stat--vamp",children:"Disabled"})]}),a.jsxs("p",{children:["Ult effect level: ",m.ult.level]}),a.jsx("br",{}),a.jsx("button",{onClick:()=>{c({type:"ultToggleState"})},children:"Toggle ult effect"}),a.jsx("button",{onClick:()=>{c({type:"ultToggleLevel"})},children:"Toggle ult level"})]}),a.jsxs("p",{children:["Unleashes his demonic form for ",a.jsx("b",{children:"10"})," seconds, gaining: ",a.jsx("span",{className:"stat--ad",children:"30% / 40% / 50% Attack Damage"}),", ",a.jsx("span",{className:"stat--hp",children:"25% / 35% / 45% increased healing"})," and ",a.jsxs("abbr",{title:"60% / 80% / 100%",className:"stat--moveSpeed",children:[Math.round(o.moveSpeed*60/100)," /"," ",Math.round(o.moveSpeed*80/100)," /"," ",Math.round(o.moveSpeed)," decaying Movement Speed"]}),". During this time, Umbral Dash's Physical Vamp is increased to ",a.jsx("span",{className:"stat--vamp",children:"50%"}),". ",a.jsx("br",{}),"World Ender's duration is extended by 5 seconds with a takedown, up to 10 extra seconds. ",a.jsx("br",{}),"Nearby minions and monsters are feared for 3 seconds on activation."]})]})}];return a.jsx(a.Fragment,{children:x.map((r,e)=>a.jsx("div",{className:"abilitiesTile",children:a.jsx("div",{children:r.description},e)}))})}export{f as default};
