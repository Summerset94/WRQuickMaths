import{r as g,j as a}from"./index-22e5b87e.js";function k({currentLevel:n,mod:r,bonus:l,atk:i,def:h,champ:u,updateAbilitiesBonus:x}){const[c,m]=g.useState(0),w=t=>{t.preventDefault(),m(d=>parseInt(t.target.value))},s=g.useMemo(()=>{const t={cooldown:{base:3,growth:0},cost:{base:10,growth:4},damage:{base:Math.round(n/2)+11,growth:3,modifier:i.ap*12/100},burst:{base:55,growth:10,modifier:15+5*Math.floor((n-1)/4)+i.ap*35/100+h.health*(c*3/100)/100}},d={cost:{base:80,growth:5},cooldown:{base:22,growth:2}},o={cost:{base:80,growth:5},cooldown:{base:12,growth:0},damage:{base:4,growth:1.5,modifier:i.ap*5/100},execution:{treshold:h.health*(5+c*2.6/100)/100}},e={cost:{base:100,growth:0},cooldown:{base:85,growth:5},damage:{star:{base:150,growth:100,modifier:i.ap*65/100},skies:{base:187.5,growth:125,modifier:i.ap*65/100},shockwave:{base:150,growth:100,modifier:i.ap*65/100}}};return{q:{cooldown:{1:t.cooldown.base*r.atkcdr,2:(t.cooldown.base+t.cooldown.growth)*r.atkcdr,3:(t.cooldown.base+t.cooldown.growth*2)*r.atkcdr,4:(t.cooldown.base+t.cooldown.growth*3)*r.atkcdr},cost:{1:t.cost.base,2:t.cost.base+t.cost.growth,3:t.cost.base+t.cost.growth*2,4:t.cost.base+t.cost.growth*3},damage:{raw:{1:t.damage.base+t.damage.modifier,2:t.damage.base+t.damage.modifier+t.damage.growth,3:t.damage.base+t.damage.modifier+t.damage.growth*2,4:t.damage.base+t.damage.modifier+t.damage.growth*3},mitigated:{1:(t.damage.base+t.damage.modifier)*(1-r.defMagRed),2:(t.damage.base+t.damage.modifier+t.damage.growth)*(1-r.defMagRed),3:(t.damage.base+t.damage.modifier+t.damage.growth*2)*(1-r.defMagRed),4:(t.damage.base+t.damage.modifier+t.damage.growth*3)*(1-r.defMagRed)}},burst:{raw:{1:t.burst.base+t.burst.modifier,2:t.burst.base+t.burst.modifier+t.burst.growth,3:t.burst.base+t.burst.modifier+t.burst.growth*2,4:t.burst.base+t.burst.modifier+t.burst.growth*3},mitigated:{1:(t.burst.base+t.burst.modifier)*(1-r.defMagRed),2:(t.burst.base+t.burst.modifier+t.burst.growth)*(1-r.defMagRed),3:(t.burst.base+t.burst.modifier+t.burst.growth*2)*(1-r.defMagRed),4:(t.burst.base+t.burst.modifier+t.burst.growth*3)*(1-r.defMagRed)}},text:{damage:a.jsxs("span",{className:"stat--ap",children:["0.5 per champion Level +",t.damage.base-Math.round(n/2)," / ",t.damage.base+t.damage.growth-Math.round(n/2)," / ",t.damage.base+t.damage.growth*2-Math.round(n/2)," / ",t.damage.base+t.damage.growth*3-Math.round(n/2)," (+12% AP) Magic damage"]}),burst:a.jsxs("span",{className:"stat--ap",children:["15/20/25/30 (at level 1/5/9/13) +45/55/65/75 (+35% AP) Magic damage ",a.jsxs("span",{className:"stat--hp",children:["(",a.jsx("span",{className:"stat--armor",children:"+3% of Stardust stacks"}),") of target's Magic Health"]})]})}},w:{cooldown:{1:d.cooldown.base*r.atkcdr,2:(d.cooldown.base+d.cooldown.growth)*r.atkcdr,3:(d.cooldown.base+d.cooldown.growth*2)*r.atkcdr,4:(d.cooldown.base+d.cooldown.growth*3)*r.atkcdr},cost:{1:d.cost.base,2:d.cost.base+d.cost.growth,3:d.cost.base+d.cost.growth*2,4:d.cost.base+d.cost.growth*3},text:{moveSpeed:a.jsxs("span",{className:"stat--moveSpeed",children:[Math.round(i.moveSpeed+300)," (300 + 100%) Movement Speed"]})}},e:{cooldown:{1:o.cooldown.base*r.atkcdr,2:(o.cooldown.base+o.cooldown.growth)*r.atkcdr,3:(o.cooldown.base+o.cooldown.growth*2)*r.atkcdr,4:(o.cooldown.base+o.cooldown.growth*3)*r.atkcdr},cost:{1:o.cost.base,2:o.cost.base+o.cost.growth,3:o.cost.base+o.cost.growth*2,4:o.cost.base+o.cost.growth*3},damage:{raw:{1:o.damage.base+o.damage.modifier,2:o.damage.base+o.damage.modifier+o.damage.growth,3:o.damage.base+o.damage.modifier+o.damage.growth*2,4:o.damage.base+o.damage.modifier+o.damage.growth*3},mitigated:{1:(o.damage.base+o.damage.modifier)*(1-r.defMagRed),2:(o.damage.base+o.damage.modifier+o.damage.growth)*(1-r.defMagRed),3:(o.damage.base+o.damage.modifier+o.damage.growth*2)*(1-r.defMagRed),4:(o.damage.base+o.damage.modifier+o.damage.growth*3)*(1-r.defMagRed)}},execution:{treshold:o.execution.treshold},text:{damage:a.jsxs("span",{className:"stat--ap",children:[o.damage.base," / ",o.damage.base+o.damage.growth," / ",o.damage.base+o.damage.growth*2," / ",o.damage.base+o.damage.growth*3," (+5% AP) Magic damage"]}),execution:a.jsxs("span",{className:"stat--hp",children:["5 (",a.jsx("span",{className:"stat--armor",children:"+2.6% Stardust stacks"})," )% of Max Health"]})}},r:{cooldown:{1:e.cooldown.base*r.atkcdr,2:(e.cooldown.base+e.cooldown.growth)*r.atkcdr,3:(e.cooldown.base+e.cooldown.growth*2)*r.atkcdr},cost:{1:e.cost.base,2:e.cost.base+e.cost.growth,3:e.cost.base+e.cost.growth*2},damage:{star:{raw:{1:e.damage.star.base+e.damage.star.modifier,2:e.damage.star.base+e.damage.star.modifier+e.damage.star.growth,3:e.damage.star.base+e.damage.star.modifier+e.damage.star.growth*2},mitigated:{1:(e.damage.star.base+e.damage.star.modifier)*(1-r.defMagRed),2:(e.damage.star.base+e.damage.star.modifier+e.damage.star.growth)*(1-r.defMagRed),3:(e.damage.star.base+e.damage.star.modifier+e.damage.star.growth*2)*(1-r.defMagRed)}},skies:{raw:{1:e.damage.skies.base+e.damage.skies.modifier,2:e.damage.skies.base+e.damage.skies.modifier+e.damage.skies.growth,3:e.damage.skies.base+e.damage.skies.modifier+e.damage.skies.growth*2},mitigated:{1:(e.damage.skies.base+e.damage.skies.modifier)*(1-r.defMagRed),2:(e.damage.skies.base+e.damage.skies.modifier+e.damage.skies.growth)*(1-r.defMagRed),3:(e.damage.skies.base+e.damage.skies.modifier+e.damage.skies.growth*2)*(1-r.defMagRed)}},shockwave:{raw:{1:e.damage.shockwave.base+e.damage.shockwave.modifier,2:e.damage.shockwave.base+e.damage.shockwave.modifier+e.damage.shockwave.growth,3:e.damage.shockwave.base+e.damage.shockwave.modifier+e.damage.shockwave.growth*2},mitigated:{1:(e.damage.shockwave.base+e.damage.shockwave.modifier)*(1-r.defMagRed),2:(e.damage.shockwave.base+e.damage.shockwave.modifier+e.damage.shockwave.growth)*(1-r.defMagRed),3:(e.damage.shockwave.base+e.damage.shockwave.modifier+e.damage.shockwave.growth*2)*(1-r.defMagRed)}}},text:{star:a.jsxs("span",{className:"stat--ap",children:[e.damage.star.base," / ",e.damage.star.base+e.damage.star.growth," / ",e.damage.star.base+e.damage.star.growth*2," / ",e.damage.star.base+e.damage.star.growth*3," (+65% AP) Magic damage"]}),skies:a.jsxs("span",{className:"stat--ap",children:[e.damage.skies.base," / ",e.damage.skies.base+e.damage.skies.growth," / ",e.damage.skies.base+e.damage.skies.growth*2," / ",e.damage.skies.base+e.damage.skies.growth*3," (+81.25% AP) Magic damage"]}),shockwave:a.jsxs("span",{className:"stat--ap",children:[e.damage.shockwave.base," / ",e.damage.shockwave.base+e.damage.shockwave.growth," / ",e.damage.shockwave.base+e.damage.shockwave.growth*2," / ",e.damage.shockwave.base+e.damage.shockwave.growth*3," (+65% AP) Magic damage"]})}}}},[i,h,l,n,c]),b=[{description:a.jsxs("div",{className:"abilityDescription",children:[a.jsxs("h4",{children:[a.jsx("span",{className:"marker--ability",children:"P"})," COSMIC CREATOR"]}),a.jsxs("div",{children:[a.jsxs("p",{children:["Stardust stacks: ",a.jsx("b",{className:"stat--armor",children:c})," "]}),a.jsx("p",{children:"Change Stardust stacks:"}),a.jsx("input",{type:"number",min:"0",value:c,onChange:t=>{w(t)}})]}),a.jsxs("p",{children:["Aurelion Sol's damaging abilities turn enemies into ",a.jsx("span",{className:"stat--armor",children:"Stardust"})," which in turn empowers his abilities."]}),a.jsxs("ol",{children:[a.jsxs("li",{children:[a.jsx("b",{children:"Breath of Light"}),": This ability's burst deal additional magic damage equal to (",a.jsx("span",{className:"stat--armor",children:"3% of Stardust stacks"}),")% of target's ",a.jsx("span",{className:"stat--hp",children:"maximum Health"}),"."]}),a.jsxs("li",{children:[a.jsx("b",{children:"Astral Flight"}),": Increases the maximum flight distance by (",a.jsx("span",{className:"stat--armor",children:"62.5% of Stardust stacks"}),")%."]}),a.jsxs("li",{children:[a.jsx("b",{children:"Singularity"}),": Increases the ability's execution threshold by (",a.jsx("span",{className:"stat--armor",children:"2.6% of Stardust stacks"}),")% and its impact area."]}),a.jsxs("li",{children:[a.jsx("b",{children:"Falling Star/The Skies Descend:"})," Increases the ability's impact area."]})]})]})},{description:a.jsxs("div",{className:"abilityDescription",children:[a.jsxs("h4",{children:[a.jsx("span",{className:"marker--ability",children:"1"})," BREATH OF LIGHT"]}),a.jsxs("h5",{children:["Cooldown:"," ",s.q.cooldown[1].toFixed(1)," /"]}),a.jsxs("h5",{className:"stat--mana",children:["Cost:"," ",s.q.cost[1]," /"," ",s.q.cost[2]," /"," ",s.q.cost[3]," /"," ",s.q.cost[4]]}),a.jsx("h5",{className:"stat--ap",children:"Damage (per second / burst):"}),a.jsxs("p",{className:"stat--ap",children:["Pre-mitigation:"," ",Math.round(s.q.damage.raw[1]*5)," + ",Math.round(s.q.burst.raw[1])," /"," ",Math.round(s.q.damage.raw[2]*5)," + ",Math.round(s.q.burst.raw[2])," /"," ",Math.round(s.q.damage.raw[3]*5)," + ",Math.round(s.q.burst.raw[3])," /"," ",Math.round(s.q.damage.raw[4]*5)," + ",Math.round(s.q.burst.raw[4])]}),a.jsxs("p",{className:"stat--ap",children:["Post-mitigation:"," ",Math.round(s.q.damage.mitigated[1]*5)," + ",Math.round(s.q.burst.mitigated[1])," /"," ",Math.round(s.q.damage.mitigated[2]*5)," + ",Math.round(s.q.burst.mitigated[2])," /"," ",Math.round(s.q.damage.mitigated[3]*5)," + ",Math.round(s.q.burst.mitigated[3])," /"," ",Math.round(s.q.damage.mitigated[4]*5)," + ",Math.round(s.q.burst.mitigated[4])]}),a.jsx("br",{}),a.jsxs("p",{children:["Aurelion Sol breathes starfire for 3.25 seconds, dealing magic damage equal to ",s.q.text.damage," every 0.2 seconds to the first enemy hit and revealing them. 50% of that damage is dealt to nearby enemies. For every second that the breath hits the same target, Aurelion Sol deals a burst of magic damage equal to ",s.q.text.burst,". If the target is a champion, Aurelion Sol gains 1 stack of Stardust. Damage dealt based on the target's maximum Health is capped at 100 against monsters."]}),a.jsxs("ul",{children:[a.jsx("li",{children:"Damage ratio to monsters: 40%;"}),a.jsx("li",{children:"Aurelion Sol can move slowly while casting Breath of Light;"}),a.jsx("li",{children:"At maximum ability level, Breath of Light's duration is extended infinitely;"}),a.jsx("li",{children:"When Breath of Light is channeled for fewer than 0.25 seconds, it will go into a 1-second cooldown."})]})]})},{description:a.jsxs("div",{className:"abilityDescription",children:[a.jsxs("h4",{children:[a.jsx("span",{className:"marker--ability",children:"2"})," ASTRAL FLIGHT"]}),a.jsxs("h5",{children:["Cooldown:"," ",s.w.cooldown[1].toFixed(1)," /"," ",s.w.cooldown[2].toFixed(1)," /"," ",s.w.cooldown[3].toFixed(1)," /"," ",s.w.cooldown[4].toFixed(1)]}),a.jsxs("h5",{className:"stat--mana",children:["Cost:"," ",s.w.cost[1]," /"," ",s.w.cost[2]," /"," ",s.w.cost[3]," /"," ",s.w.cost[4]]}),a.jsx("br",{}),a.jsx("p",{children:"Aurelion Sol flies in a direction. While flying, Breath of Light has no cooldown and its damage increases by 112.5%/115%/117.5%/120%. His flight speed is reduced by 50% if Breath of Light is cast while flying."}),a.jsxs("ul",{children:[a.jsx("li",{children:"Recast: Ends the flight early;"}),a.jsx("li",{children:"If a champion is killed within 3 seconds of taking damage from Aurelion Sol, 90% of this ability's cooldown is refunded."}),a.jsxs("li",{children:["Aurelion Sol's flight speed is ",s.w.text.moveSpeed]})]})]})},{description:a.jsxs("div",{className:"abilityDescription",children:[a.jsxs("h4",{children:[a.jsx("span",{className:"marker--ability",children:"3"})," SINGULARITY"]}),a.jsxs("h5",{children:["Cooldown:"," ",s.e.cooldown[1].toFixed(1)," /"," ",s.e.cooldown[2].toFixed(1)," /"," ",s.e.cooldown[3].toFixed(1)," /"," ",s.e.cooldown[4].toFixed(1)]}),a.jsxs("h5",{className:"stat--mana",children:["Cost:"," ",s.e.cost[1]," /"," ",s.e.cost[2]," /"," ",s.e.cost[3]," /"," ",s.e.cost[4]]}),a.jsx("h5",{className:"stat--ap",children:"Damage (per second):"}),a.jsxs("p",{className:"stat--ap",children:["Pre-mitigation:"," ",Math.round(s.e.damage.raw[1]*5)," ",Math.round(s.e.damage.raw[2]*5)," /"," ",Math.round(s.e.damage.raw[3]*5)," /"," ",Math.round(s.e.damage.raw[4]*5)]}),a.jsxs("p",{className:"stat--ap",children:["Post-mitigation:"," ",Math.round(s.e.damage.mitigated[1]*5)," /"," ",Math.round(s.e.damage.mitigated[2]*5)," /"," ",Math.round(s.e.damage.mitigated[3]*5)," /"," ",Math.round(s.e.damage.mitigated[4]*5)]}),a.jsx("h5",{className:"stat--vamp",children:"Execution treshold"}),a.jsxs("p",{children:["Current target: ",a.jsx("span",{className:"stat--hp",children:Math.round(s.e.execution.treshold)})]}),a.jsx("br",{}),a.jsxs("p",{children:["Aurelion Sol summons a black hole, dealing ",s.e.text.damage," every 0.2 seconds. The black hole drags enemies toward the center of the black hole for 5 seconds. Enemies in the center die instantly when below ",s.e.text.execution,"."]}),a.jsx("p",{children:"As the black hole absorbs Stardust, for every second an enemy champion is trapped within the black hole's range, Aurelion Sol gains a stack of Stardust. When enemies are killed within the black hole's range, Aurelion Sol gains:"}),a.jsxs("ul",{children:[a.jsx("li",{children:"5 stacks of Stardust for every champion or epic monster killed;"}),a.jsx("li",{children:"3 stacks of Stardust for every siege minion or large monster killed;"}),a.jsx("li",{children:"2 stacks of Stardust for every minion or small monster killed."})]})]})},{description:a.jsxs("div",{className:"abilityDescription",children:[a.jsxs("h4",{children:[a.jsx("span",{className:"marker--ability",children:"ULT"})," FALLING STAR / THE SKIES DESCEND"]}),a.jsxs("h5",{children:["Cooldown:"," ",s.r.cooldown[1].toFixed(1)," /"," ",s.r.cooldown[2].toFixed(1)," /"," ",s.r.cooldown[3].toFixed(1)]}),a.jsxs("h5",{className:"stat--mana",children:["Cost:"," ",s.r.cost[1]]}),a.jsx("h5",{className:"stat--ap",children:"Damage:"}),a.jsxs("ol",{className:"stat--ap",children:[a.jsxs("ul",{children:[a.jsx("li",{children:a.jsx("b",{className:"stat--armor",children:"Falling Star"})}),a.jsxs("li",{children:["Pre-mitigation:"," ",Math.round(s.r.damage.star.raw[1])," /"," ",Math.round(s.r.damage.star.raw[2])," /"," ",Math.round(s.r.damage.star.raw[3])]}),a.jsxs("li",{children:["Post-mitigation:"," ",Math.round(s.r.damage.star.mitigated[1])," /"," ",Math.round(s.r.damage.star.mitigated[2])," /"," ",Math.round(s.r.damage.star.mitigated[3])]})]}),a.jsxs("ul",{children:[a.jsx("li",{children:a.jsx("b",{className:"stat--armor",children:"Skies Descend"})}),a.jsxs("li",{children:["Pre-mitigation:"," ",Math.round(s.r.damage.skies.raw[1])," /"," ",Math.round(s.r.damage.skies.raw[2])," /"," ",Math.round(s.r.damage.skies.raw[3])]}),a.jsxs("li",{children:["Post-mitigation:"," ",Math.round(s.r.damage.skies.mitigated[1])," /"," ",Math.round(s.r.damage.skies.mitigated[2])," /"," ",Math.round(s.r.damage.skies.mitigated[3])]})]}),a.jsxs("ul",{children:[a.jsx("li",{children:a.jsx("b",{className:"stat--armor",children:"Shockwave"})}),a.jsxs("li",{children:["Pre-mitigation:"," ",Math.round(s.r.damage.shockwave.raw[1])," /"," ",Math.round(s.r.damage.shockwave.raw[2])," /"," ",Math.round(s.r.damage.shockwave.raw[3])]}),a.jsxs("li",{children:["Post-mitigation:"," ",Math.round(s.r.damage.shockwave.mitigated[1])," /"," ",Math.round(s.r.damage.shockwave.mitigated[2])," /"," ",Math.round(s.r.damage.shockwave.mitigated[3])]})]})]}),a.jsx("br",{}),a.jsxs("p",{children:["Falling Star: Aurelion Sol plucks a star from the heavens and crashes it into the earth, dealing ",s.r.text.star," stunning enemies within range for 1 second. For every enemy champion hit, Aurelion Sol gains 8 stacks of Stardust."]}),a.jsxs("p",{children:["The Skies Descend: Whenever Aurelion Sol collects 65 stacks of Stardust, the next Falling Star transforms into The Skies Descend. Aurelion Sol rains down cosmic fury on the earth, dealing ",s.r.text.skies," over a larger area and knocking enemies hit Airborne for 1 second. He also emits a huge shockwave at the same time, dealing ",s.r.text.shockwave," to enemy champions and epic monsters. All enemies hit are slowed by 50% for 1 second and revealed for 1.5 seconds."]})]})}];return a.jsx(a.Fragment,{children:b.map((t,d)=>a.jsx("div",{className:"abilitiesTile",children:a.jsx("div",{children:t.description},d)}))})}export{k as default};
